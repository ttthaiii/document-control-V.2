"use strict";(()=>{var e={};e.id=338,e.ids=[338],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},96282:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>m,patchFetch:()=>h,requestAsyncStorage:()=>l,routeModule:()=>u,serverHooks:()=>g,staticGenerationAsyncStorage:()=>d});var s={};r.r(s),r.d(s,{POST:()=>p});var a=r(49303),o=r(88716),n=r(60670),i=r(87070),c=r(40416);async function p(e){try{let t=e.headers.get("authorization");if(!t?.startsWith("Bearer "))return i.NextResponse.json({error:"Authorization required"},{status:401});let r=await c.CZ.verifyIdToken(t.split("Bearer ")[1]),{projectName:s,category:a}=await e.json();if(console.log(`[TASKS_DEBUG] Received projectName: "${s}", category: "${a}"`),!s||!a)return i.NextResponse.json({error:"Project Name and Category are required"},{status:400});let o=c.uE.collection("projects").where("name","==",s).limit(1),n=await o.get();if(n.empty)return console.log(`[TASKS_DEBUG] Project with name "${s}" not found.`),i.NextResponse.json({success:!0,data:{tasks:[]}});let p=n.docs[0].id;console.log(`[TASKS_DEBUG] Found project ID: "${p}"`);let u=c.uE.collection("tasks").where("projectId","==",p).where("taskCategory","==",a).where("link","==",""),l=await u.get();if(console.log(`[TASKS_DEBUG] Query executed. Found ${l.size} task(s).`),l.empty)return i.NextResponse.json({success:!0,data:{tasks:[]}});let d=l.docs.map(e=>{let t=e.data();return{taskUid:e.id,taskCategory:t.taskCategory||"",taskName:t.taskName||"",projectName:t.projectName||"",startDate:t.startDate||"",finishDate:t.finishDate||"",percentComplete:t.percentComplete||0}});return i.NextResponse.json({success:!0,data:{tasks:d,projectName:s,category:a,totalTasks:d.length,userId:r.uid}})}catch(e){return console.error("❌ Firestore tasks API error:",e),i.NextResponse.json({success:!1,error:e.message},{status:500})}}let u=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/google-sheets/tasks/route",pathname:"/api/google-sheets/tasks",filename:"route",bundlePath:"app/api/google-sheets/tasks/route"},resolvedPagePath:"D:\\ttsdoc-v2\\src\\app\\api\\google-sheets\\tasks\\route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:l,staticGenerationAsyncStorage:d,serverHooks:g}=u,m="/api/google-sheets/tasks/route";function h(){return(0,n.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:d})}},40416:(e,t,r)=>{r.d(t,{CZ:()=>u,Hf:()=>l,iW:()=>p,uE:()=>d});let s=require("firebase-admin");var a=r.n(s);let o={credential:a().credential.cert({projectId:process.env.FIREBASE_PROJECT_ID,clientEmail:process.env.FIREBASE_CLIENT_EMAIL,privateKey:process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g,"\n")}),storageBucket:"ttsdocumentcontrol.firebasestorage.app"},n={credential:a().credential.cert({projectId:process.env.BIM_TRACKING_PROJECT_ID,clientEmail:process.env.BIM_TRACKING_CLIENT_EMAIL,privateKey:process.env.BIM_TRACKING_PRIVATE_KEY?.replace(/\\n/g,"\n")})},i=a().apps.find(e=>e?.name==="ttsdoc-v2")||a().initializeApp(o,"ttsdoc-v2"),c=a().apps.find(e=>e?.name==="bim-tracking")||a().initializeApp(n,"bim-tracking"),p=i.firestore(),u=i.auth(),l=i.storage().bucket(),d=c.firestore()}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[948,972],()=>r(96282));module.exports=s})();