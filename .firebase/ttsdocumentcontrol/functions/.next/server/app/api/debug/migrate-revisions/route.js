"use strict";(()=>{var e={};e.id=285,e.ids=[285],e.modules={20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},72929:e=>{e.exports=import("firebase-admin/firestore")},64413:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{originalPathname:()=>g,patchFetch:()=>u,requestAsyncStorage:()=>p,routeModule:()=>d,serverHooks:()=>m,staticGenerationAsyncStorage:()=>l});var i=r(49303),a=r(88716),o=r(60670),n=r(28252),c=e([n]);n=(c.then?(await c)():c)[0];let d=new i.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/debug/migrate-revisions/route",pathname:"/api/debug/migrate-revisions",filename:"route",bundlePath:"app/api/debug/migrate-revisions/route"},resolvedPagePath:"D:\\ttsdoc-v2\\src\\app\\api\\debug\\migrate-revisions\\route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:p,staticGenerationAsyncStorage:l,serverHooks:m}=d,g="/api/debug/migrate-revisions/route";function u(){return(0,o.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:l})}s()}catch(e){s(e)}})},28252:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{GET:()=>c});var i=r(87070),a=r(40416),o=r(72929),n=e([o]);async function c(){try{console.log("\uD83D\uDE80 Starting RFA documents migration via API (Corrected Logic)...");let e=a.iW.collection("rfaDocuments"),t=0,r=[],s=await e.get();if(s.empty)return i.NextResponse.json({success:!0,message:"No documents found in the rfaDocuments collection."});console.log(`🔍 Found ${s.size} total documents. Checking for migration status...`);let n=a.iW.batch(),c=0;if(s.forEach(t=>{let s=t.data();if(void 0===s.revisionNumber){let s=e.doc(t.id);console.log(`  - Staging update for doc: ${t.id}`),n.update(s,{revisionNumber:0,isLatest:!0,updatedAt:o.FieldValue.serverTimestamp()}),r.push({id:t.id,status:"UPDATED"}),c++}else r.push({id:t.id,status:"SKIPPED"})}),0===c)return i.NextResponse.json({success:!0,message:"✅ All documents are already up-to-date. No migration needed.",report:r});await n.commit(),t=c;let u=`🎉 Migration successful! Updated ${t} documents.`;return console.log(u),i.NextResponse.json({success:!0,message:u,report:r})}catch(e){return console.error("❌ Migration API failed:",e),i.NextResponse.json({success:!1,error:"Migration failed.",details:e.message},{status:500})}}o=(n.then?(await n)():n)[0],s()}catch(e){s(e)}})},40416:(e,t,r)=>{r.d(t,{CZ:()=>d,Hf:()=>p,iW:()=>u,uE:()=>l});let s=require("firebase-admin");var i=r.n(s);let a={credential:i().credential.cert({projectId:process.env.FIREBASE_PROJECT_ID,clientEmail:process.env.FIREBASE_CLIENT_EMAIL,privateKey:process.env.FIREBASE_PRIVATE_KEY?.replace(/\\n/g,"\n")}),storageBucket:"ttsdocumentcontrol.firebasestorage.app"},o={credential:i().credential.cert({projectId:process.env.BIM_TRACKING_PROJECT_ID,clientEmail:process.env.BIM_TRACKING_CLIENT_EMAIL,privateKey:process.env.BIM_TRACKING_PRIVATE_KEY?.replace(/\\n/g,"\n")})},n=i().apps.find(e=>e?.name==="ttsdoc-v2")||i().initializeApp(a,"ttsdoc-v2"),c=i().apps.find(e=>e?.name==="bim-tracking")||i().initializeApp(o,"bim-tracking"),u=n.firestore(),d=n.auth(),p=n.storage().bucket(),l=c.firestore()}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[948,972],()=>r(64413));module.exports=s})();